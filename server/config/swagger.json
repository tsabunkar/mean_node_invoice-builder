{
    "swagger": "2.0",
    "info": {
        "version": "2.0.0",
        "title": "Invoice API Documentation",
        "description": "A sample API documentation for invoice api developed in node and documented in the swagger-2.0 specification",
        "contact": {
            "name": "Sabunkar Tejas Shailesh",
            "url": "https://github.com/tsabunkar/mean_node_invoice-builder",
            "email": "tsabunkar@gmail.com"
        },
        "license": {
            "name": "MIT Liscense",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "tags": [{
            "name": "Invoices",
            "description": "API's for Invoice"
        },
        {
            "name": "Clients",
            "description": "API's for Client"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/invoice": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get All Invoices",
                "description": "GET ALL",
                "parameters": [{
                        "name": "pageSize",
                        "type": "integer",
                        "description": "Set limit/pageSize for pagination",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "currentPage",
                        "type": "integer",
                        "description": "Set currentPage or page-number for pagination",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "filterItem",
                        "type": "string",
                        "description": "filtering document based on generic value entered (Only for Item field)",
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "sortFiled",
                        "type": "string",
                        "description": "Set field on which we want to sort ex- item,quantity,date,etc",
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "sortDirection",
                        "type": "string",
                        "description": "Set sort direction ex- asc, desc, ascending, descending, 1, or -1",
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success! fetched all invoices",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "$ref": "#/definitions/InvoiceModel"
                        },
                        "examples": {
                            "application/json": [{
                                    "_id": "5c236daf70122e67708fc3e0",
                                    "item": "walmart32",
                                    "quantity": 105,
                                    "date": "2018-05-21T00:00:00.000Z",
                                    "dueDate": "2018-05-28T00:00:00.000Z",
                                    "rate": 2,
                                    "tax": 1,
                                    "__v": 0
                                },
                                {
                                    "_id": "5c236dc270122e67708fc3e1",
                                    "item": "amazon",
                                    "quantity": 200,
                                    "date": "2018-05-21T00:00:00.000Z",
                                    "dueDate": "2018-05-28T00:00:00.000Z",
                                    "rate": 2,
                                    "tax": 1,
                                    "__v": 0
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Oops! Can't get invoices"
                    }
                }
            },
            "post": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Create a Invoice",
                "description": "Create new Invoice",
                "consumes": [
                    "application/json",
                    "application/json-patch+json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "parameters": [{
                    "name": "invoices",
                    "description": "Create a new Invice",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/CreateInvoiceModel"
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "new invoice is created",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/InvoiceModel"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "_id": "5c236daf70122e67708fc3e0",
                                "item": "walmart32",
                                "quantity": 105,
                                "date": "2018-05-21T00:00:00.000Z",
                                "dueDate": "2018-05-28T00:00:00.000Z",
                                "rate": 2,
                                "tax": 1,
                                "__v": 0
                            }
                        }
                    },
                    "400": {
                        "description": "Invoice has missing values"
                    },
                    "422": {
                        "description": "Invoice has invalid values"
                    },
                    "500": {
                        "description": "Oops! Can't create Invoice"
                    }
                }
            }
        },
        "/invoice/{id}": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get a Invoice By ID",
                "description": "find single invoice by passing Id",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Invoice ID",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "Sucessfully fetched Invoice",
                        "schema": {
                            "$ref": "#/definitions/InvoiceModel"
                        },
                        "examples": {
                            "application/json": {
                                "_id": "5c236daf70122e67708fc3e0",
                                "item": "walmart2",
                                "quantity": 200,
                                "date": "2018-05-21T00:00:00.000Z",
                                "dueDate": "2018-05-28T00:00:00.000Z",
                                "rate": 2,
                                "tax": 1,
                                "__v": 0
                            }
                        }
                    },
                    "404": {
                        "description": "Could not find invoice"
                    },
                    "500": {
                        "description": "Oops! Can't get invoice"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get a Invoice By ID",
                "description": "Delete a invoice by passing Id",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Id of the Invoice to be deleted",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "Sucessfully deleted Invoice"
                    },
                    "404": {
                        "description": "Could not find invoice"
                    },
                    "500": {
                        "description": "Oops! Can't delete invoice"
                    }
                }
            },
            "put": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Update a Invoice",
                "description": "Update new Invoice",
                "consumes": [
                    "application/json",
                    "application/json-patch+json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "Id of the Invoice to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoices",
                        "in": "body",
                        "description": "Update an existing Invoice",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateInvoiceModel"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "successfully update invoice!!",
                        "schema": {
                            "$ref": "#/definitions/InvoiceModel"
                        },
                        "examples": {
                            "application/json": {
                                "_id": "5c236daf70122e67708fc3e0",
                                "item": "walmart2",
                                "quantity": 200,
                                "date": "2018-05-21T00:00:00.000Z",
                                "dueDate": "2018-05-28T00:00:00.000Z",
                                "rate": 2,
                                "tax": 1,
                                "__v": 0
                            }
                        }
                    },
                    "400": {
                        "description": "Invoice is missing values"
                    },
                    "404": {
                        "description": "Could not find Invoice"
                    },
                    "422": {
                        "description": "Invoice has invalid values"
                    },
                    "500": {
                        "description": "Oops! Can't update Invoice"
                    }
                }
            }
        },
        "/client": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get All Clients",
                "description": "GET ALL",
                "responses": {
                    "200": {
                        "description": "Success! fetched all clients",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "$ref": "#/definitions/ClientModel"
                        },
                        "examples": {
                            "application/json": [{
                                    "_id": "5c287d89a5e0794858ac4e84",
                                    "firstName": "Tejas2",
                                    "lastName": "Sabunk2",
                                    "gender": true,
                                    "email": "tsabu2@gmail.com",
                                    "__v": 0
                                },
                                {
                                    "_id": "5c287d89a5e0794859ac4e84",
                                    "firstName": "Tejas1",
                                    "lastName": "Sabunk1",
                                    "gender": true,
                                    "email": "tsabu1@gmail.com",
                                    "__v": 0
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Oops! Can't get clients"
                    }
                }
            },
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Create a Client",
                "description": "Create new Client",
                "consumes": [
                    "application/json",
                    "application/json-patch+json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "parameters": [{
                    "name": "clients",
                    "description": "Create a new Client",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/CreateClientModel"
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "new client is created",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ClientModel"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "_id": "5c287d89a5e0794858ac4e84",
                                "firstName": "Tejas",
                                "lastName": "Sabunkar",
                                "gender": true,
                                "email": "tsabukar@gmail.com",
                                "__v": 0
                            }
                        }
                    },
                    "400": {
                        "description": "Client has missing values"
                    },
                    "422": {
                        "description": "Client has invalid values"
                    },
                    "500": {
                        "description": "Oops! Can't create Client"
                    }
                }
            }
        },
        "/client/{id}": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get a Client By ID",
                "description": "find single client by passing Id",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Client ID",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "Sucessfully fetched Client",
                        "schema": {
                            "$ref": "#/definitions/ClientModel"
                        },
                        "examples": {
                            "application/json": {
                                "_id": "5c287d89a5e0794859ac4e84",
                                "firstName": "Tejas1",
                                "lastName": "Sabunk1",
                                "gender": true,
                                "email": "tsabu1@gmail.com",
                                "__v": 0
                            }
                        }
                    },
                    "404": {
                        "description": "Could not find client"
                    },
                    "500": {
                        "description": "Oops! Can't get client"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get a Client By ID",
                "description": "Delete a client by passing Id",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Id of the Client to be deleted",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "Sucessfully deleted Client"
                    },
                    "404": {
                        "description": "Could not find client"
                    },
                    "500": {
                        "description": "Oops! Can't delete client"
                    }
                }
            },
            "put": {
                "tags": [
                    "Clients"
                ],
                "summary": "Update a Client",
                "description": "Update new Client",
                "consumes": [
                    "application/json",
                    "application/json-patch+json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "Id of the Client to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "clients",
                        "in": "body",
                        "description": "Update an existing Client",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateClientModel"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "successfully update client!!",
                        "schema": {
                            "$ref": "#/definitions/ClientModel"
                        },
                        "examples": {
                            "application/json": {
                                "_id": "5c287d89a5e0794859ac4e84",
                                "firstName": "Tejas1",
                                "lastName": "Sabunk1",
                                "gender": true,
                                "email": "tsabu1@gmail.com",
                                "__v": 0
                            }
                        }
                    },
                    "400": {
                        "description": "Client is missing values"
                    },
                    "404": {
                        "description": "Could not find Client"
                    },
                    "422": {
                        "description": "Client has invalid values"
                    },
                    "500": {
                        "description": "Oops! Can't update Client"
                    }
                }
            }
        }
    },
    "definitions": {
        "InvoiceModel": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "item": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "date": {
                    "type": "string",
                    "format": "date"
                },
                "dueDate": {
                    "type": "string",
                    "format": "date"
                },
                "rate": {
                    "type": "number",
                    "format": "double"
                },
                "tax": {
                    "type": "number",
                    "format": "float"
                },
                "client": {
                    "type": "string"
                }
            }
        },
        "CreateInvoiceModel": {
            "required": [
                "item",
                "quantity",
                "date",
                "dueDate",
                "client"
            ],
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "date": {
                    "type": "string",
                    "format": "date"
                },
                "dueDate": {
                    "type": "string",
                    "format": "date"
                },
                "rate": {
                    "type": "number",
                    "format": "double"
                },
                "tax": {
                    "type": "number",
                    "format": "float"
                },
                "client": {
                    "type": "string"
                }
            },
            "example": {
                "item": "Amazon",
                "quantity": 1,
                "date": "2018-12-27",
                "dueDate": "2018-12-27",
                "rate": 12.0,
                "tax": 13.2,
                "client": "5c287d89a5e0794858ac4e84"
            }
        },
        "UpdateInvoiceModel": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "date": {
                    "type": "string",
                    "format": "date"
                },
                "dueDate": {
                    "type": "string",
                    "format": "date"
                },
                "rate": {
                    "type": "number",
                    "format": "double"
                },
                "tax": {
                    "type": "number",
                    "format": "float"
                },
                "client": {
                    "type": "string"
                }
            },
            "example": {
                "item": "Amazon",
                "quantity": 1,
                "date": "2018-12-27",
                "dueDate": "2018-12-27",
                "rate": 12.0,
                "tax": 13.2,
                "client": "5c287d89a5e0794858ac4e84"
            }
        },
        "ClientModel": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "CreateClientModel": {
            "required": [
                "firstName",
                "lastName",
                "email",
                "gender"
            ],
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                }
            },
            "example": {
                "firstName": "Tejas",
                "lastName": "Sabunkar",
                "gender": true,
                "email": "tsabukar@gmail.com"
            }
        },
        "UpdateClientModel": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                }
            },
            "example": {
                "firstName": "Tejas",
                "lastName": "Sabunkar",
                "gender": true,
                "email": "tsabukar@gmail.com"
            }
        }
    }
}